'use strict';

var _get = require('babel-runtime/helpers/get')['default'];

var _inherits = require('babel-runtime/helpers/inherits')['default'];

var _classCallCheck = require('babel-runtime/helpers/class-call-check')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

require('source-map-support/register');

// add source map support to nodejs

var _soundworksServer = require('soundworks/server');

var _soundworksServer2 = _interopRequireDefault(_soundworksServer);

var _PlayerExperience = require('./PlayerExperience');

var _PlayerExperience2 = _interopRequireDefault(_PlayerExperience);

var server = _soundworksServer2['default'].server;

var ConductorExperience = (function (_soundworks$ServerExperience) {
  _inherits(ConductorExperience, _soundworks$ServerExperience);

  function ConductorExperience(clientType) {
    _classCallCheck(this, ConductorExperience);

    _get(Object.getPrototypeOf(ConductorExperience.prototype), 'constructor', this).call(this, clientType);

    // configure sharedParams
    this.sharedParams = this.require('shared-params');
    this.sharedParams.addItem('text', 'numPlayers', 'num players', 0, ['conductor']);
    this.sharedParams.addItem('enum', 'state', 'state', ['reset', 'running', 'end'], 'reset');
    this.sharedParams.addItem('number', 'maxDrops', 'max drops', 0, 100, 1, 1);
    this.sharedParams.addItem('number', 'loopDiv', 'loop div', 1, 100, 1, 3);
    this.sharedParams.addItem('number', 'loopPeriod', 'loop period', 1, 30, 0.1, 7.5);
    this.sharedParams.addItem('number', 'loopAttenuation', 'loop atten', 0, 1, 0.01, 0.70710678118655);
    this.sharedParams.addItem('number', 'minGain', 'min gain', 0, 1, 0.01, 0.1);
    this.sharedParams.addItem('number', 'quantize', 'quantize', 0, 0.1, 0.001, 0);
    this.sharedParams.addItem('enum', 'autoPlay', 'auto play', ['off', 'on'], 'off');
    this.sharedParams.addItem('trigger', 'clear', 'clear');
  }

  return ConductorExperience;
})(_soundworksServer2['default'].ServerExperience);

server.init({ appName: 'Drops' });

// create server side player and conductor experience
var experience = new _PlayerExperience2['default']('player');
var conductor = new ConductorExperience('conductor');

server.start();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zY2huZWxsL0RldmVsb3BtZW50L3dlYi9jb2xsZWN0aXZlLXNvdW5kd29ya3MvZHJvcHMvc3JjL3NlcnZlci9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O1FBQU8sNkJBQTZCOzs7O2dDQUNiLG1CQUFtQjs7OztnQ0FDYixvQkFBb0I7Ozs7QUFDakQsSUFBTSxNQUFNLEdBQUcsOEJBQVcsTUFBTSxDQUFDOztJQUUzQixtQkFBbUI7WUFBbkIsbUJBQW1COztBQUNaLFdBRFAsbUJBQW1CLENBQ1gsVUFBVSxFQUFFOzBCQURwQixtQkFBbUI7O0FBRXJCLCtCQUZFLG1CQUFtQiw2Q0FFZixVQUFVLEVBQUU7OztBQUdsQixRQUFJLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsZUFBZSxDQUFDLENBQUM7QUFDbEQsUUFBSSxDQUFDLFlBQVksQ0FBQyxPQUFPLENBQUMsTUFBTSxFQUFFLFlBQVksRUFBRSxhQUFhLEVBQUUsQ0FBQyxFQUFFLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQztBQUNqRixRQUFJLENBQUMsWUFBWSxDQUFDLE9BQU8sQ0FBQyxNQUFNLEVBQUUsT0FBTyxFQUFFLE9BQU8sRUFBRSxDQUFDLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxDQUFDLEVBQUUsT0FBTyxDQUFDLENBQUM7QUFDMUYsUUFBSSxDQUFDLFlBQVksQ0FBQyxPQUFPLENBQUMsUUFBUSxFQUFFLFVBQVUsRUFBRSxXQUFXLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7QUFDM0UsUUFBSSxDQUFDLFlBQVksQ0FBQyxPQUFPLENBQUMsUUFBUSxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7QUFDekUsUUFBSSxDQUFDLFlBQVksQ0FBQyxPQUFPLENBQUMsUUFBUSxFQUFFLFlBQVksRUFBRSxhQUFhLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxHQUFHLEVBQUUsR0FBRyxDQUFDLENBQUM7QUFDbEYsUUFBSSxDQUFDLFlBQVksQ0FBQyxPQUFPLENBQUMsUUFBUSxFQUFFLGlCQUFpQixFQUFFLFlBQVksRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLElBQUksRUFBRSxnQkFBZ0IsQ0FBQyxDQUFDO0FBQ25HLFFBQUksQ0FBQyxZQUFZLENBQUMsT0FBTyxDQUFDLFFBQVEsRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsSUFBSSxFQUFFLEdBQUcsQ0FBQyxDQUFDO0FBQzVFLFFBQUksQ0FBQyxZQUFZLENBQUMsT0FBTyxDQUFDLFFBQVEsRUFBRSxVQUFVLEVBQUUsVUFBVSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFDO0FBQzlFLFFBQUksQ0FBQyxZQUFZLENBQUMsT0FBTyxDQUFDLE1BQU0sRUFBRSxVQUFVLEVBQUUsV0FBVyxFQUFFLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxFQUFFLEtBQUssQ0FBQyxDQUFDO0FBQ2pGLFFBQUksQ0FBQyxZQUFZLENBQUMsT0FBTyxDQUFDLFNBQVMsRUFBRSxPQUFPLEVBQUUsT0FBTyxDQUFDLENBQUM7R0FDeEQ7O1NBaEJHLG1CQUFtQjtHQUFTLDhCQUFXLGdCQUFnQjs7QUFtQjdELE1BQU0sQ0FBQyxJQUFJLENBQUMsRUFBRSxPQUFPLEVBQUUsT0FBTyxFQUFFLENBQUMsQ0FBQzs7O0FBR2xDLElBQU0sVUFBVSxHQUFHLGtDQUFxQixRQUFRLENBQUMsQ0FBQztBQUNsRCxJQUFNLFNBQVMsR0FBRyxJQUFJLG1CQUFtQixDQUFDLFdBQVcsQ0FBQyxDQUFDOztBQUV2RCxNQUFNLENBQUMsS0FBSyxFQUFFLENBQUMiLCJmaWxlIjoiL1VzZXJzL3NjaG5lbGwvRGV2ZWxvcG1lbnQvd2ViL2NvbGxlY3RpdmUtc291bmR3b3Jrcy9kcm9wcy9zcmMvc2VydmVyL2luZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICdzb3VyY2UtbWFwLXN1cHBvcnQvcmVnaXN0ZXInOyAvLyBhZGQgc291cmNlIG1hcCBzdXBwb3J0IHRvIG5vZGVqc1xuaW1wb3J0IHNvdW5kd29ya3MgZnJvbSAnc291bmR3b3Jrcy9zZXJ2ZXInO1xuaW1wb3J0IFBsYXllckV4cGVyaWVuY2UgZnJvbSAnLi9QbGF5ZXJFeHBlcmllbmNlJztcbmNvbnN0IHNlcnZlciA9IHNvdW5kd29ya3Muc2VydmVyO1xuXG5jbGFzcyBDb25kdWN0b3JFeHBlcmllbmNlIGV4dGVuZHMgc291bmR3b3Jrcy5TZXJ2ZXJFeHBlcmllbmNlIHtcbiAgY29uc3RydWN0b3IoY2xpZW50VHlwZSkge1xuICAgIHN1cGVyKGNsaWVudFR5cGUpO1xuXG4gICAgLy8gY29uZmlndXJlIHNoYXJlZFBhcmFtc1xuICAgIHRoaXMuc2hhcmVkUGFyYW1zID0gdGhpcy5yZXF1aXJlKCdzaGFyZWQtcGFyYW1zJyk7XG4gICAgdGhpcy5zaGFyZWRQYXJhbXMuYWRkSXRlbSgndGV4dCcsICdudW1QbGF5ZXJzJywgJ251bSBwbGF5ZXJzJywgMCwgWydjb25kdWN0b3InXSk7XG4gICAgdGhpcy5zaGFyZWRQYXJhbXMuYWRkSXRlbSgnZW51bScsICdzdGF0ZScsICdzdGF0ZScsIFsncmVzZXQnLCAncnVubmluZycsICdlbmQnXSwgJ3Jlc2V0Jyk7XG4gICAgdGhpcy5zaGFyZWRQYXJhbXMuYWRkSXRlbSgnbnVtYmVyJywgJ21heERyb3BzJywgJ21heCBkcm9wcycsIDAsIDEwMCwgMSwgMSk7XG4gICAgdGhpcy5zaGFyZWRQYXJhbXMuYWRkSXRlbSgnbnVtYmVyJywgJ2xvb3BEaXYnLCAnbG9vcCBkaXYnLCAxLCAxMDAsIDEsIDMpO1xuICAgIHRoaXMuc2hhcmVkUGFyYW1zLmFkZEl0ZW0oJ251bWJlcicsICdsb29wUGVyaW9kJywgJ2xvb3AgcGVyaW9kJywgMSwgMzAsIDAuMSwgNy41KTtcbiAgICB0aGlzLnNoYXJlZFBhcmFtcy5hZGRJdGVtKCdudW1iZXInLCAnbG9vcEF0dGVudWF0aW9uJywgJ2xvb3AgYXR0ZW4nLCAwLCAxLCAwLjAxLCAwLjcwNzEwNjc4MTE4NjU1KTtcbiAgICB0aGlzLnNoYXJlZFBhcmFtcy5hZGRJdGVtKCdudW1iZXInLCAnbWluR2FpbicsICdtaW4gZ2FpbicsIDAsIDEsIDAuMDEsIDAuMSk7XG4gICAgdGhpcy5zaGFyZWRQYXJhbXMuYWRkSXRlbSgnbnVtYmVyJywgJ3F1YW50aXplJywgJ3F1YW50aXplJywgMCwgMC4xLCAwLjAwMSwgMCk7XG4gICAgdGhpcy5zaGFyZWRQYXJhbXMuYWRkSXRlbSgnZW51bScsICdhdXRvUGxheScsICdhdXRvIHBsYXknLCBbJ29mZicsICdvbiddLCAnb2ZmJyk7XG4gICAgdGhpcy5zaGFyZWRQYXJhbXMuYWRkSXRlbSgndHJpZ2dlcicsICdjbGVhcicsICdjbGVhcicpO1xuICB9XG59XG5cbnNlcnZlci5pbml0KHsgYXBwTmFtZTogJ0Ryb3BzJyB9KTtcblxuLy8gY3JlYXRlIHNlcnZlciBzaWRlIHBsYXllciBhbmQgY29uZHVjdG9yIGV4cGVyaWVuY2VcbmNvbnN0IGV4cGVyaWVuY2UgPSBuZXcgUGxheWVyRXhwZXJpZW5jZSgncGxheWVyJyk7XG5jb25zdCBjb25kdWN0b3IgPSBuZXcgQ29uZHVjdG9yRXhwZXJpZW5jZSgnY29uZHVjdG9yJyk7XG5cbnNlcnZlci5zdGFydCgpO1xuIl19