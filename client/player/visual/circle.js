'use strict';

var _createClass = require('babel-runtime/helpers/create-class')['default'];

var _classCallCheck = require('babel-runtime/helpers/class-call-check')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _d3ScaleLinear = require('d3-scale-linear');

var _d3ScaleLinear2 = _interopRequireDefault(_d3ScaleLinear);

// should remove that

function getRandomColor() {
  var letters = '56789ABCDEF'.split('');
  var color = '#';
  for (var i = 0; i < 6; i++) {
    color += letters[Math.floor(Math.random() * letters.length)];
  }
  return color;
}

var colorMap = ['#44C7F1', '#37C000', '#F5D900', '#F39300', '#EC5D57', '#B36AE2', '#00FDFF', '#FF80BE', '#CAFA79', '#FFFF64', '#FF9EFF', '#007AFF'];

var colors = '';

var Circle = (function () {
  function Circle(id, x, y, options) {
    _classCallCheck(this, Circle);

    this.id = id;
    this.x = x;
    this.y = y;

    this.opacity = options.opacity || 1;
    this.color = colorMap[(options.color || 0) % colorMap.length];

    this.growthVelocity = options.velocity || 50; // pixels / sec
    this.minVelocity = 50; // if gain is < 0.25 => constant growth
    this.friction = -50; // pixels / sec

    this.setDuration(options.duration);

    this.radius = 0;
    this.coordinates = {};
    this.isDead = false;
  }

  _createClass(Circle, [{
    key: 'setDuration',
    value: function setDuration(time) {
      this.lifeTime = time;

      this.opacityScale = _d3ScaleLinear2['default'].scale.linear().domain([this.lifeTime, 0]).range([this.opacity, 0]);
    }
  }, {
    key: 'update',
    value: function update(dt, w, h) {
      // update coordinates - screen orientation
      this.coordinates.x = this.x * w;
      this.coordinates.y = this.y * h;

      this.lifeTime -= dt;
      this.opacity = this.opacityScale(this.lifeTime);

      if (this.growthVelocity > this.minVelocity) {
        this.growthVelocity += this.friction * dt;
      }

      this.radius += this.growthVelocity * dt;

      if (this.lifeTime < 0) {
        this.isDead = true;
      }
    }
  }, {
    key: 'draw',
    value: function draw(ctx) {
      if (this.isDead) {
        return;
      }

      ctx.save();
      ctx.beginPath();
      ctx.fillStyle = this.color;
      ctx.globalAlpha = this.opacity;
      ctx.arc(this.coordinates.x, this.coordinates.y, Math.round(this.radius), 0, Math.PI * 2, false);
      ctx.fill();
      ctx.closePath();
      ctx.restore();
    }
  }]);

  return Circle;
})();

exports['default'] = Circle;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zY2huZWxsL0RldmVsb3BtZW50L3dlYi9jb2xsZWN0aXZlLXNvdW5kd29ya3MvZHJvcHMvc3JjL2NsaWVudC9wbGF5ZXIvdmlzdWFsL2NpcmNsZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7NkJBQWUsaUJBQWlCOzs7Ozs7QUFFaEMsU0FBUyxjQUFjLEdBQUc7QUFDeEIsTUFBTSxPQUFPLEdBQUcsYUFBYSxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsQ0FBQztBQUN4QyxNQUFJLEtBQUssR0FBRyxHQUFHLENBQUM7QUFDaEIsT0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRTtBQUMxQixTQUFLLElBQUksT0FBTyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxHQUFHLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO0dBQzlEO0FBQ0QsU0FBTyxLQUFLLENBQUM7Q0FDZDs7QUFFRCxJQUFNLFFBQVEsR0FBRyxDQUNmLFNBQVMsRUFBRSxTQUFTLEVBQUUsU0FBUyxFQUFFLFNBQVMsRUFDMUMsU0FBUyxFQUFFLFNBQVMsRUFBRSxTQUFTLEVBQUUsU0FBUyxFQUMxQyxTQUFTLEVBQUUsU0FBUyxFQUFFLFNBQVMsRUFBRSxTQUFTLENBQzNDLENBQUM7O0FBRUYsSUFBSSxNQUFNLEdBQUcsRUFBRSxDQUFDOztJQUVLLE1BQU07QUFDZCxXQURRLE1BQU0sQ0FDYixFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxPQUFPLEVBQUU7MEJBRFosTUFBTTs7QUFFdkIsUUFBSSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUM7QUFDYixRQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQztBQUNYLFFBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDOztBQUVYLFFBQUksQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDLE9BQU8s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cmtzL2Ryb3BzL3NyYy9jbGllbnQvcGxheWVyL3Zpc3VhbC9jaXJjbGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZDMgZnJvbSAnZDMtc2NhbGUtbGluZWFyJzsgLy8gc2hvdWxkIHJlbW92ZSB0aGF0XG5cbmZ1bmN0aW9uIGdldFJhbmRvbUNvbG9yKCkge1xuICBjb25zdCBsZXR0ZXJzID0gJzU2Nzg5QUJDREVGJy5zcGxpdCgnJyk7XG4gIGxldCBjb2xvciA9ICcjJztcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCA2OyBpKyspIHtcbiAgICBjb2xvciArPSBsZXR0ZXJzW01hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIGxldHRlcnMubGVuZ3RoKV07XG4gIH1cbiAgcmV0dXJuIGNvbG9yO1xufVxuXG5jb25zdCBjb2xvck1hcCA9IFtcbiAgJyM0NEM3RjEnLCAnIzM3QzAwMCcsICcjRjVEOTAwJywgJyNGMzkzMDAnLFxuICAnI0VDNUQ1NycsICcjQjM2QUUyJywgJyMwMEZERkYnLCAnI0ZGODBCRScsXG4gICcjQ0FGQTc5JywgJyNGRkZGNjQnLCAnI0ZGOUVGRicsICcjMDA3QUZGJ1xuXTtcblxubGV0IGNvbG9ycyA9ICcnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDaXJjbGUge1xuICBjb25zdHJ1Y3RvcihpZCwgeCwgeSwgb3B0aW9ucykge1xuICAgIHRoaXMuaWQgPSBpZDtcbiAgICB0aGlzLnggPSB4O1xuICAgIHRoaXMueSA9IHk7XG5cbiAgICB0aGlzLm9wYWNpdHkgPSBvcHRpb25zLm9wYWNpdHkgfHwgMTtcbiAgICB0aGlzLmNvbG9yID0gY29sb3JNYXBbKG9wdGlvbnMuY29sb3IgfHwgMCkgJSBjb2xvck1hcC5sZW5ndGhdO1xuXG4gICAgdGhpcy5ncm93dGhWZWxvY2l0eSA9IG9wdGlvbnMudmVsb2NpdHkgfHwgNTA7IC8vIHBpeGVscyAvIHNlY1xuICAgIHRoaXMubWluVmVsb2NpdHkgPSA1MDsgLy8gaWYgZ2FpbiBpcyA8IDAuMjUgPT4gY29uc3RhbnQgZ3Jvd3RoXG4gICAgdGhpcy5mcmljdGlvbiA9IC01MDsgLy8gcGl4ZWxzIC8gc2VjXG5cbiAgICB0aGlzLnNldER1cmF0aW9uKG9wdGlvbnMuZHVyYXRpb24pO1xuXG4gICAgdGhpcy5yYWRpdXMgPSAwO1xuICAgIHRoaXMuY29vcmRpbmF0ZXMgPSB7fTtcbiAgICB0aGlzLmlzRGVhZCA9IGZhbHNlO1xuICB9XG5cbiAgc2V0RHVyYXRpb24odGltZSkge1xuICAgIHRoaXMubGlmZVRpbWUgPSB0aW1lO1xuXG4gICAgdGhpcy5vcGFjaXR5U2NhbGUgPSBkMy5zY2FsZS5saW5lYXIoKVxuICAgICAgLmRvbWFpbihbdGhpcy5saWZlVGltZSwgMF0pXG4gICAgICAucmFuZ2UoW3RoaXMub3BhY2l0eSwgMF0pO1xuICB9XG5cbiAgdXBkYXRlKGR0LCB3LCBoKSB7XG4gICAgLy8gdXBkYXRlIGNvb3JkaW5hdGVzIC0gc2NyZWVuIG9yaWVudGF0aW9uXG4gICAgdGhpcy5jb29yZGluYXRlcy54ID0gdGhpcy54ICogdztcbiAgICB0aGlzLmNvb3JkaW5hdGVzLnkgPSB0aGlzLnkgKiBoO1xuXG4gICAgdGhpcy5saWZlVGltZSAtPSBkdDtcbiAgICB0aGlzLm9wYWNpdHkgPSB0aGlzLm9wYWNpdHlTY2FsZSh0aGlzLmxpZmVUaW1lKTtcblxuICAgIGlmICh0aGlzLmdyb3d0aFZlbG9jaXR5ID4gdGhpcy5taW5WZWxvY2l0eSkge1xuICAgICAgdGhpcy5ncm93dGhWZWxvY2l0eSArPSAodGhpcy5mcmljdGlvbiAqIGR0KTtcbiAgICB9XG5cbiAgICB0aGlzLnJhZGl1cyArPSB0aGlzLmdyb3d0aFZlbG9jaXR5ICogZHQ7XG5cbiAgICBpZiAodGhpcy5saWZlVGltZSA8IDApIHtcbiAgICAgIHRoaXMuaXNEZWFkID0gdHJ1ZTtcbiAgICB9XG4gIH1cblxuICBkcmF3KGN0eCkge1xuICAgIGlmICh0aGlzLmlzRGVhZCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGN0eC5zYXZlKCk7XG4gICAgY3R4LmJlZ2luUGF0aCgpO1xuICAgIGN0eC5maWxsU3R5bGUgPSB0aGlzLmNvbG9yO1xuICAgIGN0eC5nbG9iYWxBbHBoYSA9IHRoaXMub3BhY2l0eTtcbiAgICBjdHguYXJjKHRoaXMuY29vcmRpbmF0ZXMueCwgdGhpcy5jb29yZGluYXRlcy55LCBNYXRoLnJvdW5kKHRoaXMucmFkaXVzKSwgMCwgTWF0aC5QSSAqIDIsIGZhbHNlKTtcbiAgICBjdHguZmlsbCgpO1xuICAgIGN0eC5jbG9zZVBhdGgoKTtcbiAgICBjdHgucmVzdG9yZSgpO1xuICB9XG59XG4iXX0=